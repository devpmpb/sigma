# backend/.env.example - TEMPLATE DE VARIÁVEIS DE AMBIENTE
# Copie este arquivo para .env e configure as variáveis
# NUNCA commite o arquivo .env com valores reais!

# =============================================================================
# 🗄️ BANCO DE DADOS
# =============================================================================
# URL de conexão com PostgreSQL
# Formato: postgresql://usuario:senha@host:porta/nome_do_banco

# Desenvolvimento Local:
DATABASE_URL="postgresql://postgres:sua_senha@localhost:5432/sigma_dev"

# Produção (exemplo):
# DATABASE_URL="postgresql://sigma_user:senha_forte_aqui@localhost:5432/sigma_prod"

# =============================================================================
# 🔐 SEGURANÇA E AUTENTICAÇÃO
# =============================================================================
# Chave secreta para tokens JWT
# ⚠️ IMPORTANTE: NUNCA use os valores de exemplo em produção!
# ⚠️ Gere secrets seguros com: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

JWT_SECRET="GERE_UM_SECRET_SEGURO_AQUI_64_CARACTERES_MINIMO"
JWT_REFRESH_SECRET="GERE_OUTRO_SECRET_SEGURO_AQUI_64_CARACTERES_MINIMO"

# Tempo de expiração do token de acesso
JWT_EXPIRES_IN="15m"

# Tempo de expiração do refresh token
JWT_REFRESH_EXPIRES_IN="7d"

# =============================================================================
# 🌍 AMBIENTE
# =============================================================================
# Ambiente da aplicação (development, production, test)
NODE_ENV="development"

# Porta do servidor
PORT=3001

# URL base da aplicação
APP_URL="http://localhost:3001"

# URL do frontend (para CORS)
FRONTEND_URL="http://localhost:3000"

# =============================================================================
# 📧 EMAIL (OPCIONAL - para reset de senha e notificações)
# =============================================================================
# Configurações de email para envio de notificações
SMTP_HOST="smtp.gmail.com"
SMTP_PORT="587"
SMTP_USER="seu-email@gmail.com"
SMTP_PASS="sua-senha-ou-app-password"
SMTP_FROM="noreply@sigma.com.br"

# =============================================================================
# 📁 UPLOAD DE ARQUIVOS (OPCIONAL)
# =============================================================================
# Diretório para uploads
UPLOAD_PATH="./uploads"

# Tamanho máximo de arquivo em MB
MAX_FILE_SIZE=10

# Tipos de arquivo permitidos (separados por vírgula)
ALLOWED_FILE_TYPES="jpg,jpeg,png,pdf,doc,docx"

# =============================================================================
# 🔒 CONFIGURAÇÕES DE SEGURANÇA
# =============================================================================
# Número máximo de tentativas de login antes de bloquear
MAX_LOGIN_ATTEMPTS=5

# Tempo de bloqueio em minutos
LOCKOUT_TIME=30

# Rounds para hash de senha (10-12 recomendado, quanto maior mais seguro mas mais lento)
BCRYPT_ROUNDS=10

# =============================================================================
# 📊 LOGS E MONITORAMENTO
# =============================================================================
# Nível de log (debug, info, warn, error)
LOG_LEVEL="info"

# Ativar logs detalhados de SQL (true/false)
DATABASE_LOGGING="false"

# =============================================================================
# 🧪 CONFIGURAÇÕES DE TESTE
# =============================================================================
# Banco para testes (opcional - deixe vazio para usar o mesmo do desenvolvimento)
TEST_DATABASE_URL=""

# =============================================================================
# 🔧 CONFIGURAÇÕES AVANÇADAS
# =============================================================================
# Timeout de conexão com banco em segundos
DATABASE_TIMEOUT=10

# Pool de conexões máximo
DATABASE_POOL_MAX=10

# Pool de conexões mínimo
DATABASE_POOL_MIN=2

# =============================================================================
# 📝 EXEMPLOS DE CONFIGURAÇÃO POR AMBIENTE
# =============================================================================

# ────────────────────────────────────────────────────────────────────────────
# DESENVOLVIMENTO LOCAL:
# ────────────────────────────────────────────────────────────────────────────
# DATABASE_URL="postgresql://postgres:123456@localhost:5432/sigma_dev"
# JWT_SECRET="dev_secret_key_not_for_production"
# JWT_REFRESH_SECRET="dev_refresh_secret_key_not_for_production"
# NODE_ENV="development"
# FRONTEND_URL="http://localhost:3000"

# ────────────────────────────────────────────────────────────────────────────
# PRODUÇÃO (Windows Server):
# ────────────────────────────────────────────────────────────────────────────
# ⚠️ EM PRODUÇÃO, NÃO USE ARQUIVO .env!
# Configure as variáveis de ambiente diretamente no Windows Server:
#
# Via PowerShell (Administrador):
# [Environment]::SetEnvironmentVariable("DATABASE_URL", "postgresql://sigma_prod:senha_forte@localhost:5432/sigma_prod", "Machine")
# [Environment]::SetEnvironmentVariable("JWT_SECRET", "secret_gerado_com_crypto", "Machine")
# [Environment]::SetEnvironmentVariable("JWT_REFRESH_SECRET", "refresh_secret_gerado_com_crypto", "Machine")
# [Environment]::SetEnvironmentVariable("NODE_ENV", "production", "Machine")
# [Environment]::SetEnvironmentVariable("PORT", "3001", "Machine")
# [Environment]::SetEnvironmentVariable("FRONTEND_URL", "https://sigma.prefeitura.gov.br", "Machine")
# [Environment]::SetEnvironmentVariable("BCRYPT_ROUNDS", "12", "Machine")

# ────────────────────────────────────────────────────────────────────────────
# TESTE:
# ────────────────────────────────────────────────────────────────────────────
# DATABASE_URL="postgresql://postgres:123456@localhost:5432/sigma_test"
# JWT_SECRET="test_secret_key"
# JWT_REFRESH_SECRET="test_refresh_secret_key"
# NODE_ENV="test"

# =============================================================================
# ⚠️ NOTAS DE SEGURANÇA IMPORTANTES
# =============================================================================
#
# 1. 🔴 NUNCA commite o arquivo .env no Git
# 2. 🔴 Use senhas FORTES em produção (mínimo 16 caracteres, mix de letras, números e símbolos)
# 3. 🔴 SEMPRE mude as chaves JWT em produção
# 4. 🔴 Use HTTPS em produção (SSL/TLS)
# 5. 🔴 Configure firewall adequadamente
# 6. 🔴 Use variáveis de ambiente do servidor em produção (não arquivo .env)
# 7. 🔴 Faça backup regular do banco de dados
# 8. 🔴 Monitore logs de segurança regularmente
#
# =============================================================================
# 🛠️ COMANDOS ÚTEIS
# =============================================================================
#
# Gerar JWT secrets seguros:
#   node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
#
# Gerar senha aleatória forte:
#   node -e "console.log(require('crypto').randomBytes(16).toString('base64'))"
#
# Testar conexão com banco:
#   psql "postgresql://usuario:senha@localhost:5432/sigma"
#
# Ver variáveis de ambiente no Windows:
#   Get-ChildItem Env:
#
# =============================================================================
